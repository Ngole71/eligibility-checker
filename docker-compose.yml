services:
  database:
    build: ./database
    environment:
      POSTGRES_DB: eligibility_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}  # Use environment variable with fallback
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: eligibility_db
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-password}  # Use environment variable with fallback
    env_file:
      - backend/.env  # Load from .env file
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - app-network

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge
